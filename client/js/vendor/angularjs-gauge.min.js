/*!
 * angularjs-gauge - A Gauge directive for Angular 1.x apps and dashboards
 * 
 * Version: 1.0.0
 *
 * Copyright 2016 Ashish Chopra
 * Released under the MIT license
 * https://github.com/ashish-chopra/angular-gauge/blob/master/LICENSE
 */
!function(t){function e(){var e="<div style='display:inline;text-align:center;position:relative;'><span><u>{{prepend}}</u>{{value}}<u>{{append}}</u></span><b>{{label}}</b><canvas></canvas></div>",i={size:200,value:void 0,cap:"butt",thick:2,type:"full",foregroundColor:"#FFCC66",backgroundColor:"#CCC"},n=function(t,e){this.element=t.find("canvas")[0],this.text=t.find("span"),this.legend=t.find("b"),this.unit=t.find("u"),this.context=this.element.getContext("2d"),this.options=e,this.init()};return n.prototype={init:function(){this.setupStyles(),this.create()},setupStyles:function(){this.context.canvas.width=this.options.size,this.context.canvas.height=this.options.size,this.context.lineCap=this.options.cap,this.context.lineWidth=this.options.thick;var t=.22*this.options.size,e=this.options.size;this.text.css({display:"inline-block",fontWeight:100,width:"100%",position:"absolute",fontFamily:"Open Sans",textAlign:"center",overflow:"hidden",textOverflow:"ellipsis",fontSize:t+"px",lineHeight:e+"px"}),this.unit.css({textDecoration:"none",fontSize:"0.6em",fontWeight:200});var i=this.options.size/13,n=5*i+parseInt(this.options.size);this.legend.css({display:"inline-block",width:"100%",position:"absolute",fontFamily:"Open Sans",textAlign:"center",overflow:"hidden",textOverflow:"ellipsis",fontWeight:200,fontSize:i+"px",lineHeight:n+"px"})},create:function(){function t(){if(e=window.requestAnimationFrame(t),u<=l){a.beginPath();var i=u+2*o;a.arc(s.x,s.y,h,u,i,!1),a.strokeStyle=c,a.stroke(),u=i}else cancelAnimationFrame(e)}var e,i=this.getType(),n=this.getBounds(i),o=.0174532925,s=this.getCenter(),a=this.context,r=this.getValue(),h=this.getRadius(),c=(this.getThickness(),this.getForegroundColor()),u=n.head,l=n.tail,d=l-u;this.drawShell(u,l),l=u+d*r/100,t()},getBounds:function(t){if("semi"==t)var e=Math.PI,i=2*Math.PI;else if("full"==t)var e=1.5*Math.PI,i=3.5*Math.PI;else if("arch"===t)var e=.8*Math.PI,i=2.2*Math.PI;return{head:e,tail:i}},drawShell:function(t,e){var i=this.context,n=this.getCenter(),o=this.getRadius();i.beginPath(),i.arc(n.x,n.y,o,t,e,!1),i.strokeStyle=this.options.backgroundColor,i.stroke()},clear:function(){this.context.clearRect(0,0,this.getWidth(),this.getHeight())},update:function(){this.clear(),this.create()},destroy:function(){this.clear()},getRadius:function(){var t=this.getCenter();return t.x-this.getThickness()},getCenter:function(){var t=this.getWidth()/2,e=this.getHeight()/2;return{x:t,y:e}},getValue:function(){var t=0;return this.options.used&&this.options.total?(t=this.options.used/this.options.total*100,this.options.value=this.options.used):t=this.options.value,t},getWidth:function(){return this.context.canvas.width},getHeight:function(){return this.context.canvas.height},getThickness:function(){return this.options.thick},getBackgroundColor:function(){return this.options.backgroundColor},getForegroundColor:function(){return this.options.foregroundColor},getLineCap:function(){return this.options.cap},getType:function(){return this.options.type}},{restrict:"E",replace:!0,template:e,scope:{append:"@?",backgroundColor:"@?",cap:"@?",foregroundColor:"@?",label:"@?",prepend:"@?",size:"@?",thick:"@?",type:"@?",value:"=?",used:"=?",total:"=?"},link:function(e,o,s,a){function r(e,i){c&&e&&!t.equals(e,i)&&c.update()}function h(e,i){c&&e&&!t.equals(e,i)&&(c.destroy(),c.init())}e.value=t.isDefined(e.value)?e.value:i.value,e.size=t.isDefined(e.size)?e.size:i.size,e.cap=t.isDefined(e.cap)?e.cap:i.cap,e.thick=t.isDefined(e.thick)?e.thick:i.thick,e.type=t.isDefined(e.type)?e.type:i.type,e.foregroundColor=t.isDefined(e.foregroundColor)?e.foregroundColor:i.foregroundColor,e.backgroundColor=t.isDefined(e.backgroundColor)?e.backgroundColor:i.backgroundColor;var c=new n(o,e);e.$watch("value",r,!1),e.$watch("used",r,!1),e.$watch("total",r,!1),e.$watch("cap",h,!1),e.$watch("thick",h,!1),e.$watch("type",h,!1),e.$watch("size",h,!1),e.$watch("foregroundColor",h,!1),e.$watch("backgroundColor",h,!1),e.$on("$destroy",function(){}),e.$on("$resize",function(){})}}}t.module("angularjs-gauge",[]).directive("ngGauge",e),e.$inject=[]}(angular);
//# sourceMappingURL=angularjs-gauge.min.js.map
